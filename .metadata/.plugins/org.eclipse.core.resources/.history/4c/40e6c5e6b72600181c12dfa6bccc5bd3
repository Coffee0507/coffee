package jp.co.lsij.p16590004.e_200.model;

import java.math.BigInteger;

/**
 * パラメータの範囲をチェックするメソッドを集めたクラス
 *
 * @author m-kakuwa
 *
 */
public class ValueRangeCheck {
  private static final BigInteger bigMaxLong = BigInteger.valueOf(Long.MAX_VALUE);
  private static final BigInteger bigMinLong = BigInteger.valueOf(Long.MIN_VALUE);
  private static final BigInteger bigMinZero = BigInteger.valueOf(0);
  // 追加：インターノウス
  // ここから
  private static final BigInteger MaxInt = BigInteger.valueOf(Integer.MAX_VALUE);
  // ここまで

  /**
   * 指定されたパラメータをLongの範囲に収まるように変換するメソッド
   *
   * @param val
   * @return
   *
   */
  public static long getValueWithinTheRangeOfLong(BigInteger val) {

    if (val.compareTo(bigMaxLong) == 1) {
      val = bigMaxLong;
    } else if (val.compareTo(bigMinLong) == -1) {
      val = bigMinLong;
    }

    return val.longValue();
  }


  /**
   * 指定されたパラメータがLongの範囲内にあるかチェックするメソッド
   *
   * @param val
   * @return
   */
  public static boolean isInTheRangeOfLong(BigInteger val) {

    if (val.compareTo(bigMaxLong) == 1 || val.compareTo(bigMinLong) == -1) {
      return false;
    }

    return true;
  }


  /**
   * 指定されたパラメータが0〜Longの最大値の範囲内の数値かチェックするメソッド
   *
   * @param val
   * @return
   */
  public static boolean isZeroToLongMaxValue(BigInteger val) {

    if (val.compareTo(bigMaxLong) == 1 || val.compareTo(bigMinZero) == -1) {
      return false;
    }

    return true;
  }

  // 追加：インターノウス
  // ここから
  /**
   * 指定されたパラメータが0〜intの最大値の範囲内の数値かチェックするメソッド
   *
   * @param val
   * @return
   */
  public static boolean isZeroToIntMaxValue(BigInteger val) {

    if (val.compareTo(MaxInt) == 1 || val.compareTo(bigMinZero) == -1) {
      return false;
    }

    return true;
  }
  // ここまで

}
