package jp.co.lsij.p16590004.e_200.model.purchase;

import java.text.ParseException;

import jp.co.lsij.p16590004.common.PurchaseConstants;
import jp.co.lsij.p16590004.e_200.model.ProjInputValue;
import jp.co.lsij.p16590004.e_77.model.p_num.beans.ProjNumBean;
import jp.co.lsij.p16590004.exception.PASMErrorType;
import jp.co.lsij.p16590004.exception.PASMException;

/**
 * 仕入れインポートの処理のヘルパークラス
 *
 * @author インターノウス
 *
 */
public class PurchaseControllerActionHelper {

	// デフォルトコンストラクタ
	private PurchaseControllerActionHelper() {

	}

	/**
	 * 仕入れインポート画面でインポートされたCSV値の空欄チェックをするメソッド
	 *
	 * @param columnName カラム名
	 * @param columnValue カラムの値
	 * @return 空欄でなければtrue、入力必須項目に空欄があった場合は例外を投げる
	 * @throws PASMException
	 */
	public static boolean purchaseEmptyCheck(String columnName,String columnValue) throws PASMException {
		if (columnValue.isEmpty()) {
			if (columnName.equals(PurchaseConstants.PROJ_ID)) {
				throw new PASMException(PASMErrorType.INVALID_PARAM, "P番が未入力です");
			} else if (columnName.equals(PurchaseConstants.PURCHASE_AMOUNT)) {
				throw new PASMException(PASMErrorType.INVALID_PARAM, "総仕入れ額が未入力です");
			}
		}
		return true;
	}



	/**
	 * 仕入れインポート画面でインポートされたCSVの値をチェックするメソッド
	 *
	 * @param columnName カラム名
	 * @param columnValue カラムの値
	 * @return 異常値でなければtrue、入力項目に以上値があった場合は例外を投げる
	 * @throws ParseException
	 * @throws PASMException
	 */
	public static boolean puchaseValidInputValue(String columnName,String columnValue) throws ParseException, PASMException {

		if (columnName.equals(PurchaseConstants.PROJ_ID)) {// P番
			ProjInputValue.checkProjID(columnValue);
		}

		if (columnName.equals(PurchaseConstants.PURCHASE_AMOUNT)) {// 総仕入れ額
			ProjInputValue.checkMoney(columnValue, columnName);
		}

		return true;
	}



	public static ProjNumBean createProjNumBean(ProjNumBean projBean, String name, String value, boolean isProjPrePurchase) throws ParseException {
		if (name.equals(PurchaseConstants.PROJ_ID)) {
			projBean.setProjNum(value);
		} else if (name.equals(PurchaseConstants.PURCHASE_AMOUNT)) {
			Long amount = Long.parseLong(value);
			if (isProjPrePurchase) {
				projBean.setPrePurchaseAmount(amount);
				projBean.setProjPrePurchase(true);
			} else {
				projBean.setNewPurchaseAmount(amount);
			}
		}

		return projBean;
	}

}
