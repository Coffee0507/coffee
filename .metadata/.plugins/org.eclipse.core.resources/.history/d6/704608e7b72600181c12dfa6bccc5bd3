package jp.co.lsij.p16590004.e_200.model.master;

import java.util.List;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import jp.co.lsij.p16590004.common.CodeEnum;
import jp.co.lsij.p16590004.common.DBDataSource;
import jp.co.lsij.p16590004.common.Error;
import jp.co.lsij.p16590004.common.SystemOptionConstants;
import jp.co.lsij.p16590004.e_200.model.ControllerAction;
import jp.co.lsij.p16590004.e_200.model.ControllerActionHelper;
import jp.co.lsij.p16590004.e_200.model.ExceptionHandler;
import jp.co.lsij.p16590004.e_200.model.LogAction;
import jp.co.lsij.p16590004.e_200.model.SystemLogAction;
import jp.co.lsij.p16590004.e_77.model.BeanBuilderFactory;
import jp.co.lsij.p16590004.e_77.model.BeanBuilderType;
import jp.co.lsij.p16590004.e_77.model.BeanDataList;
import jp.co.lsij.p16590004.e_77.model.IBeanBuilder;
import jp.co.lsij.p16590004.e_77.model.IData;
import jp.co.lsij.p16590004.e_77.model.IDataList;
import jp.co.lsij.p16590004.e_77.model.master.UserFacade;
import jp.co.lsij.p16590004.e_77.model.master.beans.UserBean;
import jp.co.lsij.p16590004.e_77.model.master.beans.UserGroupBean;

/**
 * SystemOptionControllerが使用するメソッドをまとめたクラス
 *
 * @author m-kakuwa
 *
 */
public class SystemOptionControllerAction {

  /** リクエストパラメータ：パスワード設定/新しいパスワード入力欄 */
  private static final String NEW_PASSWORD = "pass_new";

  /** リクエストパラメータ：ユーザーグループ編集/ユーザーグループ名入力欄 */
  private static final String USER_GROUP_NAME = "user_group_name";

  /**
   * パスワード設定処理を行うメソッド
   *
   * @param request
   * @param dbDataSource
   * @param beanBuilderType
   * @param user
   * @param action
   * @throws Exception
   */
  public static void editPassAction(HttpServletRequest request, DBDataSource dbDataSource,
      BeanBuilderType beanBuilderType, String user, String action, ServletContext app, Error error)
      throws Exception {
    // リクエストパラメータの取得
    Map<String, String[]> requestParameterMap = ControllerActionHelper
        .requestParameterAction(request, dbDataSource, CodeEnum.sysLogDebug.FromJSP, app);

    String newPass = requestParameterMap.get(NEW_PASSWORD)[0];

    // 入力値チェック
    IBeanBuilder iBeanBuilder = BeanBuilderFactory.create(beanBuilderType);
    iBeanBuilder.isValidValue(requestParameterMap);

    // 入力値が有効だった時の処理・・・Mapで取得したリクエストパラメータをbeansにセットする
    IData iData = iBeanBuilder.mapToBean(requestParameterMap, user, CodeEnum.Form.edit);

    // iDataをキャスト、DBのデータ（パスワード）を更新する処理を実行
    UserBean userBean = (UserBean) iData;
    UserFacade userFacade = new UserFacade();

    // 開発ログ(デバッグ用)
    SystemLogAction.addSystemLog(dbDataSource, userBean, CodeEnum.sysLogDebug.ToLogic, request,
        app);
    Object[] objectArray = {newPass};
    SystemLogAction.addSystemLog(dbDataSource, "newPass", objectArray, CodeEnum.sysLogDebug.ToLogic,
        request, app);

    try {
      userFacade.modifyPassward(newPass, userBean, dbDataSource);
    } catch (Exception e) {
      e.printStackTrace();
      try {// ログ追加処理(異常)
        LogAction.addLog(dbDataSource, iData, beanBuilderType, CodeEnum.Form.edit, user, action,
            true);
      } catch (Exception exception) { // 共通の例外処理
        ExceptionHandler.exceptionAction(app, request, exception, error, dbDataSource,
            "SystemOptionControllerAction.editPassAction");
      }
      throw e;
    }

    try {// ログ追加処理(正常)
      LogAction.addLog(dbDataSource, iData, beanBuilderType, CodeEnum.Form.edit, user, action,
          false);
    } catch (Exception exception) {// 共通の例外処理
      ExceptionHandler.exceptionAction(app, request, exception, error, dbDataSource,
          "SystemOptionControllerAction.editPassAction");
    }
  }

  /**
   * 追加：インターノウス
   * ユーザーグループ編集画面に遷移する際の処理
   *
   * @param request
   * @param dbDataSource
   * @param action
   */
  // SysotemOptionControllerActionへ追加
  public static void forwardActionToUserGroupForm(HttpServletRequest request, DBDataSource dbDataSource,
      String action, ServletContext app) {

    // ユーザー情報を取得
    UserFacade userFacade = new UserFacade();
    List<UserGroupBean> userGroupBeanList = null;
    IDataList userIDataList = userFacade.query(dbDataSource);
    List<UserBean> userList = ((BeanDataList<UserBean>) userIDataList).clone();

    // ユーザーグループメンバー情報の取得
    UserGroupBean userGroup = (UserGroupBean) request.getAttribute(SystemOptionConstants.SCOPE_USER_GROUP_DATA);

    // リクエストスコープに保存
    request.setAttribute("userGroupList", userGroupBeanList);
    request.setAttribute("userList", userList);

    // form画面の識別
    ControllerAction.setFormIDToScope(request, action, dbDataSource, app);
  }


}
